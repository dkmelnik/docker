version: '3'

services:
  frontend:
    container_name: docker-frontend
    environment:
      - NEXT_PUBLIC_APP_ENV=local-production
    image: node:18.8.0
    command: "sh -c 'npm i && npm run build && npm run start'"
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./frontend:/home/node/app
    restart: unless-stopped
    networks:
      - docker-network

  api:
    container_name: docker-api
    environment:
      - NODE_ENV=local
      - PORT=3001
      - HOST=http://docker.com
      - MONGO_URL=mongodb://api_db:27017/api
      - AURH_API_URL=http://auth:3002/api
    image: node:18.8.0
    working_dir: /home/node/app
    user: "node"
    volumes:
      - ./api:/home/node/app
    ports:
      - "9229:9229"
    command: npm run start
    restart: unless-stopped
    depends_on:
      - api_db
    networks:
      - docker-network

  auth:
    container_name: docker-auth
    environment:
      - PORT=3002
      - HOST=http://docker.com
      - MONGO_URL=mongodb://auth_db:27017/auth
      - API_URL=http://api:3001/api
    image: node:18.8.0
    working_dir: /home/node/app
    user: "node"
    volumes:
      - ./auth:/home/node/app
    command: npm run start
    restart: unless-stopped
    depends_on:
      - auth_db
    networks:
      - docker-network

  api_db:
    image: mongo:latest
    container_name: docker-api-db
    volumes:
      - mongodb_api:/data/db
    networks:
      - docker-network

  auth_db:
    image: mongo:latest
    container_name: docker-auth-db
    volumes:
      - mongodb_auth:/data/db
    networks:
      - docker-network

  nginx:
    image: nginx:stable-alpine
    container_name: docker-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
      - api
      - auth
    networks:
      - docker-network


volumes:
  mongodb_api:
  mongodb_auth:

networks:
  docker-network:
    driver: bridge
